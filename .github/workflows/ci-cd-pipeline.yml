name: CI/CD Pipeline for MEAN Stack

env:
  WAIT_ON_TIMEOUT: 300000

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Paso 1: Instalar dependencias del backend
      - name: Install backend dependencies
        working-directory: ./app/backend
        run: npm install

      # Paso 2: Ejecutar pruebas del backend (si existen)
      - name: Run backend tests
        working-directory: ./app/backend
        run: |
          if [ -f "package.json" ] && grep -q "\"test\"" package.json; then
            npm test
          else
            echo "No tests configured for backend"
          fi

      # Paso 3: Instalar dependencias del frontend
      - name: Install frontend dependencies
        working-directory: ./app/frontend
        run: npm install

      # Paso 4: Ejecutar pruebas del frontend (si existen)
      - name: Run frontend tests
        working-directory: ./app/frontend
        run: |
          if [ -f "package.json" ] && grep -q "\"test\"" package.json; then
            # Instalar Chrome para pruebas
            sudo apt-get update
            sudo apt-get install -y libgbm-dev libxshmfence-dev
            
            # Ejecutar pruebas
            npm test -- --watch=false --browsers=ChromeHeadless
          else
            echo "No tests configured for frontend"
          fi

      # Paso 5: Construir la aplicaci√≥n Angular
      - name: Build Angular application
        working-directory: ./app/frontend
        run: npm run build -- --configuration=production

      # Paso 6: Test de Docker Compose
      - name: Test Docker Compose build
        run: docker-compose build
